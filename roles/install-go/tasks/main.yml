---
- name: Capture current user
  command: whoami
  register: current_user
  become: false

- name: Set GOPATH for current user
  set_fact:
    user_gopath: "/home/{{ current_user.stdout }}/go"

- name: Check if Go is already installed in /usr/local/go
  stat:
    path: "{{ go_install_dir }}/go"
  register: go_check

- name: Download Go if not installed
  ansible.builtin.get_url:
    url: "{{ go_tarball_url }}"
    dest: "{{ go_tarball_dest }}"
  when: not go_check.stat.exists

- name: Extract and install Go if not installed
  unarchive:
    src: "{{ go_tarball_dest }}"
    dest: "{{ go_install_dir }}"
    remote_src: true
  when: not go_check.stat.exists
  become: true
  become_method: sudo

- name: Add GOBIN to PATH in .bashrc
  lineinfile:
    path: "/home/{{ current_user.stdout }}/.bashrc"
    line: 'export PATH=$PATH:{{ go_install_dir }}/go/bin:{{ user_gopath }}/bin'
    state: present

- name: Debug .bashrc content
  command: cat /home/{{ current_user.stdout }}/.bashrc
  register: bashrc_content

- debug:
    var: bashrc_content.stdout_lines

- name: Source .bashrc to update environment variables
  shell: |
    source /home/{{ current_user.stdout }}/.bashrc
    echo $PATH
  args:
    executable: /bin/bash
  register: sourced_output

- debug:
    var: sourced_output.stdout

- name: Debug go_check
  debug:
    var: go_check.stat.exists

- name: Install Go Repositories
  command:
    cmd: "{{ go_install_dir }}/bin/go install -v {{ item }}"
  loop: "{{ go_repositories }}"
  become: false
