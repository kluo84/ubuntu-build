---
- name: Capture current user
  command: whoami
  register: current_user
  become: false

- name: Set GOPATH for current user
  set_fact:
    user_gopath: "/home/{{ current_user.stdout }}/go"

- name: Check if Go is installed
  command: go version
  ignore_errors: true
  register: go_version_result

- name: Determine if Go version is less than 1.17 or Go is not installed
  set_fact:
    install_go: true
  when: 
    - go_version_result.rc != 0
    - "'go1.16' in go_version_result.stdout or 'go1.15' in go_version_result.stdout or 'go1.14' in go_version_result.stdout"

- name: Remove old Go version
  command: sudo rm -rf /usr/local/go
  when: install_go is defined and install_go

- name: Download Go
  ansible.builtin.get_url:
    url: "{{ go_url }}"
    dest: "/tmp/go1.21.1.linux-amd64.tar.gz"
  when: install_go is defined and install_go

- name: Install Go
  shell: tar -C {{ go_install_dir }} -xzf /tmp/go1.21.1.linux-amd64.tar.gz
  when: install_go is defined and install_go
  become: true
  become_method: sudo

- name: Set PATH for Go
  lineinfile:
    path: /etc/profile
    line: 'export PATH=$PATH:{{ go_bin_dir }}'
    state: present
  when: install_go is defined and install_go
  become: true
  become_method: sudo

- name: Install Go tools
  command: "go install -v {{ item.value }}"
  loop: "{{ tools|dict2items }}"
  environment:
    GOPATH: "{{ user_gopath }}"
  become: false  # Ensure the go tools are installed for the user
  tags: tools
