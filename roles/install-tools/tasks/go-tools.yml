---
- name: Ensure Go is installed
  shell: |
    if ! command -v go &>/dev/null; then
      sudo apt update && sudo apt install -y golang-go
    else
      echo "Go is already installed"
    fi
  args:
    executable: /bin/bash
  register: go_installation_result
  changed_when: "'Go is already installed' not in go_installation_result.stdout"

- name: Check Go Version
  shell: go version
  register: go_version_result
  changed_when: False

- name: Ensure Go version is 1.16 or higher
  assert:
    that:
      - "'go1.16' in go_version_result.stdout or 'go1.17' in go_version_result.stdout or 'go1.18' in go_version_result.stdout"
    fail_msg: "Go version is too low. You need at least Go 1.16 to use the path@version syntax with go install."

- name: Install Go tools
  shell: go install -v {{ item.value }}
  environment:
    GOBIN: "/usr/local/go/bin"  # Modify this if you want the binary to be installed elsewhere
  with_dict:
    subfinder: "github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest"
    assetfinder: "github.com/tomnomnom/assetfinder@latest"
    amass: "github.com/OWASP/Amass/v3/...@master"
    anew: "github.com/tomnomnom/anew@latest"
    httpx: "github.com/projectdiscovery/httpx/cmd/httpx@latest"
    katana: "github.com/projectdiscovery/katana/cmd/katana@latest"
    gf: "github.com/tomnomnom/gf@latest"
    gau: "github.com/lc/gau/v2/cmd/gau@latest"
    qsreplace: "github.com/tomnomnom/qsreplace@latest"
    jsubfinder: "github.com/ThreatUnkown/jsubfinder@latest"
    dalfox: "github.com/hahwul/dalfox/v2@latest"
    ffuf: "github.com/ffuf/ffuf@latest"
    naabu: "github.com/projectdiscovery/naabu/v2/cmd/naabu@latest"
    nuclei: "github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest"
    cent: "github.com/xm1k3/cent@latest"

- name: Ensure GOBIN is in the PATH
  lineinfile:
    path: ~/.bashrc
    line: 'export PATH=$PATH:/usr/local/go/bin'
    state: present
  become: no
