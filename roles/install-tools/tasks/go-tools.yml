---
- name: Check if Go is installed
  command: go version
  register: go_version_result
  ignore_errors: true
  changed_when: False

- name: Determine if Go version is less than 1.17
  set_fact:
    go_needs_update: true
  when: 
    - go_version_result is defined
    - go_version_result.rc == 0
    - "'go1.16' in go_version_result.stdout or 'go1.15' in go_version_result.stdout or 'go1.14' in go_version_result.stdout"

- name: Remove old Go version
  command: sudo rm -rf /usr/local/go
  when: go_needs_update is defined and go_needs_update

- name: Download and Install Go from official source
  block:
    - get_url:
        url: https://go.dev/dl/go1.21.1.linux-amd64.tar.gz
        dest: /tmp/go1.21.1.linux-amd64.tar.gz
        mode: '0755'
    - shell: sudo tar -C /usr/local -xzf /tmp/go1.21.1.linux-amd64.tar.gz
  when: go_needs_update is defined and go_needs_update

- name: Ensure /usr/local/go/bin is in the PATH environment variable
  lineinfile:
    path: ~/.bashrc
    line: 'export PATH=$PATH:/usr/local/go/bin'
    state: present
  become: no

- name: Install Go tools
  shell: go install -v {{ item.value }}
  environment:
    GOBIN: "/usr/local/go/bin"
  with_dict:
    subfinder: "github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest"
    assetfinder: "github.com/tomnomnom/assetfinder@latest"
    amass: "github.com/OWASP/Amass/v3/...@master"
    anew: "github.com/tomnomnom/anew@latest"
    httpx: "github.com/projectdiscovery/httpx/cmd/httpx@latest"
    katana: "github.com/projectdiscovery/katana/cmd/katana@latest"
    gf: "github.com/tomnomnom/gf@latest"
    gau: "github.com/lc/gau/v2/cmd/gau@latest"
    qsreplace: "github.com/tomnomnom/qsreplace@latest"
    jsubfinder: "github.com/ThreatUnkown/jsubfinder@latest"
    dalfox: "github.com/hahwul/dalfox/v2@latest"
    ffuf: "github.com/ffuf/ffuf@latest"
    naabu: "github.com/projectdiscovery/naabu/v2/cmd/naabu@latest"
    nuclei: "github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest"
    cent: "github.com/xm1k3/cent@latest"
